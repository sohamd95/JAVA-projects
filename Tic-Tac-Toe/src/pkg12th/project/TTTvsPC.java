/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * TTTvsPC.java
 *
 * Created on Jan 11, 2012, 5:20:42 PM
 */
package pkg12th.project;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.sql.*;
import javax.swing.JOptionPane;
import javax.swing.Timer;
import javax.swing.table.DefaultTableModel;
/**
 *
 * @author Soham
 */
public class TTTvsPC extends javax.swing.JFrame {

    /** Creates new form TTTvsPC */
    public TTTvsPC() {
        initComponents();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        bg1 = new javax.swing.ButtonGroup();
        Leaderboard = new javax.swing.JFrame();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButton4 = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        BestTimes = new javax.swing.JFrame();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jButton3 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        sqlLogin = new javax.swing.JFrame();
        jPasswordField1 = new javax.swing.JPasswordField();
        jTextField1 = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jButton6 = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jButton2 = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        rb1 = new javax.swing.JRadioButton();
        rb2 = new javax.swing.JRadioButton();
        jPanel3 = new javax.swing.JPanel();
        p1tf = new javax.swing.JTextField();
        p2tf = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        b1 = new javax.swing.JButton();
        b3 = new javax.swing.JButton();
        b2 = new javax.swing.JButton();
        b6 = new javax.swing.JButton();
        b5 = new javax.swing.JButton();
        b4 = new javax.swing.JButton();
        b9 = new javax.swing.JButton();
        b8 = new javax.swing.JButton();
        b7 = new javax.swing.JButton();
        start = new javax.swing.JButton();
        disp = new javax.swing.JLabel();
        reset = new javax.swing.JButton();
        vslbl = new javax.swing.JLabel();
        pl1lbl = new javax.swing.JLabel();
        pl2lbl = new javax.swing.JLabel();
        LeadBtn = new javax.swing.JButton();
        TimerBox = new javax.swing.JTextField();
        BestBtn = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem2 = new javax.swing.JMenuItem();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenu3 = new javax.swing.JMenu();
        jMenuItem3 = new javax.swing.JMenuItem();
        jMenuItem4 = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        jMenuItem5 = new javax.swing.JMenuItem();

        Leaderboard.setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        Leaderboard.setTitle("Leaderboard");
        Leaderboard.setMinimumSize(new java.awt.Dimension(345, 335));
        Leaderboard.setResizable(false);

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Player 1", "Player 2", "Winner"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.setRowSelectionAllowed(false);
        jScrollPane1.setViewportView(jTable1);

        jButton4.setText("BACK");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton1.setText("Reset Records");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout LeaderboardLayout = new javax.swing.GroupLayout(Leaderboard.getContentPane());
        Leaderboard.getContentPane().setLayout(LeaderboardLayout);
        LeaderboardLayout.setHorizontalGroup(
            LeaderboardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(LeaderboardLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(LeaderboardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 316, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(LeaderboardLayout.createSequentialGroup()
                        .addComponent(jButton1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        LeaderboardLayout.setVerticalGroup(
            LeaderboardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(LeaderboardLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 252, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(LeaderboardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton4)
                    .addComponent(jButton1))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        BestTimes.setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        BestTimes.setTitle("Best Times");
        BestTimes.setMinimumSize(new java.awt.Dimension(400, 340));
        BestTimes.setResizable(false);

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Player 1", "Player 2", "Minutes", "Seconds", "Milliseconds"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(jTable2);

        jButton3.setText("Reset Records");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton5.setText("BACK");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout BestTimesLayout = new javax.swing.GroupLayout(BestTimes.getContentPane());
        BestTimes.getContentPane().setLayout(BestTimesLayout);
        BestTimesLayout.setHorizontalGroup(
            BestTimesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(BestTimesLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(BestTimesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 339, Short.MAX_VALUE)
                    .addGroup(BestTimesLayout.createSequentialGroup()
                        .addComponent(jButton3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 177, Short.MAX_VALUE)
                        .addComponent(jButton5)))
                .addContainerGap())
        );
        BestTimesLayout.setVerticalGroup(
            BestTimesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(BestTimesLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 257, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(BestTimesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton3)
                    .addComponent(jButton5))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        sqlLogin.setMinimumSize(new java.awt.Dimension(400, 130));
        sqlLogin.setResizable(false);

        jLabel3.setText("MySQL Username:");

        jLabel4.setText("MySQL Password:");

        jButton6.setText("Create Database & Tables");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        jButton7.setText("Delete Database");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout sqlLoginLayout = new javax.swing.GroupLayout(sqlLogin.getContentPane());
        sqlLogin.getContentPane().setLayout(sqlLoginLayout);
        sqlLoginLayout.setHorizontalGroup(
            sqlLoginLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(sqlLoginLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(sqlLoginLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(sqlLoginLayout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addGap(14, 14, 14)
                        .addComponent(jPasswordField1, javax.swing.GroupLayout.DEFAULT_SIZE, 222, Short.MAX_VALUE))
                    .addGroup(sqlLoginLayout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jTextField1, javax.swing.GroupLayout.DEFAULT_SIZE, 224, Short.MAX_VALUE))
                    .addGroup(sqlLoginLayout.createSequentialGroup()
                        .addComponent(jButton6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton7, javax.swing.GroupLayout.DEFAULT_SIZE, 157, Short.MAX_VALUE)))
                .addContainerGap())
        );
        sqlLoginLayout.setVerticalGroup(
            sqlLoginLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(sqlLoginLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(sqlLoginLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(sqlLoginLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jPasswordField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(sqlLoginLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton7))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Cross & Noughts");
        setMinimumSize(new java.awt.Dimension(375, 470));
        setResizable(false);
        getContentPane().setLayout(null);

        jPanel4.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 102, 204), 4));

        jButton2.setText("Continue ------->");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("One Player/ Two Player ?"));

        bg1.add(rb1);
        rb1.setText("One Player");
        rb1.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                rb1ItemStateChanged(evt);
            }
        });
        rb1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rb1ActionPerformed(evt);
            }
        });

        bg1.add(rb2);
        rb2.setSelected(true);
        rb2.setText("Two Player");
        rb2.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                rb2ItemStateChanged(evt);
            }
        });

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder("Enter Your Name(s):"));

        jLabel1.setText("Player 1 (X)");

        jLabel2.setText("Player 2 (O)");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(p2tf, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(p1tf, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 133, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(p1tf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(p2tf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        p1tf.grabFocus();

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(rb1)
                            .addComponent(rb2)))
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(rb1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(rb2)
                .addGap(18, 18, 18)
                .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jButton2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(33, 33, 33))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        getContentPane().add(jPanel4);
        jPanel4.setBounds(30, 70, 300, 300);

        b1.setBackground(new java.awt.Color(0, 0, 0));
        b1.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        b1.setForeground(new java.awt.Color(255, 255, 255));
        b1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255), 4));
        b1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b1ActionPerformed(evt);
            }
        });
        getContentPane().add(b1);
        b1.setBounds(10, 80, 80, 80);
        b1.setVisible(false);

        b3.setBackground(new java.awt.Color(0, 0, 0));
        b3.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        b3.setForeground(new java.awt.Color(255, 255, 255));
        b3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255), 4));
        b3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b3ActionPerformed(evt);
            }
        });
        getContentPane().add(b3);
        b3.setBounds(170, 80, 80, 80);
        b3.setVisible(false);

        b2.setBackground(new java.awt.Color(0, 0, 0));
        b2.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        b2.setForeground(new java.awt.Color(255, 255, 255));
        b2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255), 4));
        b2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b2ActionPerformed(evt);
            }
        });
        getContentPane().add(b2);
        b2.setBounds(90, 80, 80, 80);
        b2.setVisible(false);

        b6.setBackground(new java.awt.Color(0, 0, 0));
        b6.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        b6.setForeground(new java.awt.Color(255, 255, 255));
        b6.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255), 4));
        b6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b6ActionPerformed(evt);
            }
        });
        getContentPane().add(b6);
        b6.setBounds(170, 160, 80, 80);
        b6.setVisible(false);

        b5.setBackground(new java.awt.Color(0, 0, 0));
        b5.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        b5.setForeground(new java.awt.Color(255, 255, 255));
        b5.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255), 4));
        b5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b5ActionPerformed(evt);
            }
        });
        getContentPane().add(b5);
        b5.setBounds(90, 160, 80, 80);
        b5.setVisible(false);

        b4.setBackground(new java.awt.Color(0, 0, 0));
        b4.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        b4.setForeground(new java.awt.Color(255, 255, 255));
        b4.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255), 4));
        b4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b4ActionPerformed(evt);
            }
        });
        getContentPane().add(b4);
        b4.setBounds(10, 160, 80, 80);
        b4.setVisible(false);

        b9.setBackground(new java.awt.Color(0, 0, 0));
        b9.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        b9.setForeground(new java.awt.Color(255, 255, 255));
        b9.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255), 4));
        b9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b9ActionPerformed(evt);
            }
        });
        getContentPane().add(b9);
        b9.setBounds(170, 240, 80, 80);
        b9.setVisible(false);

        b8.setBackground(new java.awt.Color(0, 0, 0));
        b8.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        b8.setForeground(new java.awt.Color(255, 255, 255));
        b8.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255), 4));
        b8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b8ActionPerformed(evt);
            }
        });
        getContentPane().add(b8);
        b8.setBounds(90, 240, 80, 80);
        b8.setVisible(false);

        b7.setBackground(new java.awt.Color(0, 0, 0));
        b7.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        b7.setForeground(new java.awt.Color(255, 255, 255));
        b7.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255), 4));
        b7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b7ActionPerformed(evt);
            }
        });
        getContentPane().add(b7);
        b7.setBounds(10, 240, 80, 80);
        b7.setVisible(false);

        start.setText("START");
        start.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                startActionPerformed(evt);
            }
        });
        getContentPane().add(start);
        start.setBounds(260, 130, 90, 50);
        start.setVisible(false);

        disp.setBackground(new java.awt.Color(0, 0, 0));
        disp.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        disp.setForeground(new java.awt.Color(51, 204, 255));
        disp.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        disp.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204), 3));
        disp.setOpaque(true);
        getContentPane().add(disp);
        disp.setBounds(10, 11, 340, 60);
        disp.setText("Enter Your Names:");

        reset.setText("RESET");
        reset.setPreferredSize(new java.awt.Dimension(65, 23));
        reset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resetActionPerformed(evt);
            }
        });
        getContentPane().add(reset);
        reset.setBounds(260, 260, 90, 50);
        reset.setVisible(false);

        vslbl.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        vslbl.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        vslbl.setText("VS");
        getContentPane().add(vslbl);
        vslbl.setBounds(160, 330, 20, 22);
        vslbl.setVisible(false);

        pl1lbl.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        pl1lbl.setForeground(new java.awt.Color(0, 0, 204));
        pl1lbl.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        pl1lbl.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        getContentPane().add(pl1lbl);
        pl1lbl.setBounds(40, 330, 110, 20);
        pl1lbl.setVisible(false);

        pl2lbl.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        pl2lbl.setForeground(new java.awt.Color(0, 0, 204));
        pl2lbl.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        pl2lbl.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        getContentPane().add(pl2lbl);
        pl2lbl.setBounds(190, 330, 110, 20);
        pl2lbl.setVisible(false);

        LeadBtn.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        LeadBtn.setText("LEADERBOARD");
        LeadBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LeadBtnActionPerformed(evt);
            }
        });
        getContentPane().add(LeadBtn);
        LeadBtn.setBounds(180, 360, 160, 40);

        TimerBox.setBackground(new java.awt.Color(0, 0, 0));
        TimerBox.setEditable(false);
        TimerBox.setFont(new java.awt.Font("Lucida Console", 1, 12)); // NOI18N
        TimerBox.setForeground(new java.awt.Color(0, 153, 255));
        TimerBox.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        TimerBox.setText("00:00:00");
        getContentPane().add(TimerBox);
        TimerBox.setBounds(260, 90, 90, 30);

        BestBtn.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        BestBtn.setText("BEST TIMES");
        BestBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BestBtnActionPerformed(evt);
            }
        });
        getContentPane().add(BestBtn);
        BestBtn.setBounds(10, 360, 160, 40);

        jMenu1.setText("File");

        jMenuItem2.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_N, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem2.setText("New Game");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem2);

        jMenuItem1.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_R, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem1.setText("Reset");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem1);

        jMenuBar1.add(jMenu1);

        jMenu3.setText("View");

        jMenuItem3.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_L, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem3.setText("Leaderboard");
        jMenuItem3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem3ActionPerformed(evt);
            }
        });
        jMenu3.add(jMenuItem3);

        jMenuItem4.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_D, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem4.setText("Best Times");
        jMenu3.add(jMenuItem4);

        jMenuBar1.add(jMenu3);

        jMenu2.setText("Tools");

        jMenuItem5.setText("Create MySQL Database");
        jMenuItem5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem5ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem5);

        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        pack();
    }// </editor-fold>//GEN-END:initComponents
int b1c,b2c,b3c,b4c,b5c,b6c,b7c,b8c,b9c,compt,pturn=0;
int p1t,p2t;
String mm3,ms3,sec3=null;
boolean win=false;
boolean vscomp=false;
String X,O;

public void chkwin(){
    if (b1c==1 && b2c==1 && b3c==1){
        disp.setText("You win this time...");win=true;
        int i=(int)(Math.random()*256);
        int j=(int)(Math.random()*256);
        int k=(int)(Math.random()*256);
        b1.setBackground(new java.awt.Color(i, j, k));
        b2.setBackground(new java.awt.Color(i, j, k));
        b3.setBackground(new java.awt.Color(i, j, k));
        b1c=-3;b2c=-3;b3c=-3;b4c=-3;b5c=-3;b6c=-3;b7c=-3;b8c=-3;b9c=-3;
        t1.stop();
        updatedata();
    }
    else if (b1c==2 && b2c==2 && b3c==2){
        disp.setText("I Win...Human.");win=true;
        int i=(int)(Math.random()*256);
        int j=(int)(Math.random()*256);
        int k=(int)(Math.random()*256);
        b1.setBackground(new java.awt.Color(i, j, k));
        b2.setBackground(new java.awt.Color(i, j, k));
        b3.setBackground(new java.awt.Color(i, j, k));
        b1c=-3;b2c=-3;b3c=-3;b4c=-3;b5c=-3;b6c=-3;b7c=-3;b8c=-3;b9c=-3;
        t1.stop();
        updatedata();
    }
    else if (b4c==1 && b5c==1 && b6c==1){
        disp.setText("You win this time...");win=true;
        int i=(int)(Math.random()*256);
        int j=(int)(Math.random()*256);
        int k=(int)(Math.random()*256);
        b4.setBackground(new java.awt.Color(i, j, k));
        b5.setBackground(new java.awt.Color(i, j, k));
        b6.setBackground(new java.awt.Color(i, j, k));
        b1c=-3;b2c=-3;b3c=-3;b4c=-3;b5c=-3;b6c=-3;b7c=-3;b8c=-3;b9c=-3;
        t1.stop();
        updatedata();
    }
    else if (b4c==2 && b5c==2 && b6c==2){
        disp.setText("I Win...Human.");win=true;
        int i=(int)(Math.random()*256);
        int j=(int)(Math.random()*256);
        int k=(int)(Math.random()*256);
        b4.setBackground(new java.awt.Color(i, j, k));
        b5.setBackground(new java.awt.Color(i, j, k));
        b6.setBackground(new java.awt.Color(i, j, k));
        b1c=-3;b2c=-3;b3c=-3;b4c=-3;b5c=-3;b6c=-3;b7c=-3;b8c=-3;b9c=-3;
        t1.stop();
        updatedata();
    }
    else if (b7c==1 && b8c==1 && b9c==1){
        disp.setText("You win this time...");win=true;
        int i=(int)(Math.random()*256);
        int j=(int)(Math.random()*256);
        int k=(int)(Math.random()*256);
        b7.setBackground(new java.awt.Color(i, j, k));
        b8.setBackground(new java.awt.Color(i, j, k));
        b9.setBackground(new java.awt.Color(i, j, k));
        b1c=-3;b2c=-3;b3c=-3;b4c=-3;b5c=-3;b6c=-3;b7c=-3;b8c=-3;b9c=-3;
        t1.stop();
        updatedata();
    }
    else if (b7c==2 && b8c==2 && b9c==2){
        disp.setText("I Win...Human.");win=true;
        int i=(int)(Math.random()*256);
        int j=(int)(Math.random()*256);
        int k=(int)(Math.random()*256);
        b7.setBackground(new java.awt.Color(i, j, k));
        b8.setBackground(new java.awt.Color(i, j, k));
        b9.setBackground(new java.awt.Color(i, j, k));
       b1c=-3;b2c=-3;b3c=-3;b4c=-3;b5c=-3;b6c=-3;b7c=-3;b8c=-3;b9c=-3;
       t1.stop();
       updatedata();
    }
    else if (b1c==1 && b5c==1 && b9c==1){
        disp.setText("You win this time...");win=true;
        int i=(int)(Math.random()*256);
        int j=(int)(Math.random()*256);
        int k=(int)(Math.random()*256);
        b1.setBackground(new java.awt.Color(i, j, k));
        b5.setBackground(new java.awt.Color(i, j, k));
        b9.setBackground(new java.awt.Color(i, j, k));
        b1c=-3;b2c=-3;b3c=-3;b4c=-3;b5c=-3;b6c=-3;b7c=-3;b8c=-3;b9c=-3;
        t1.stop();
        updatedata();
    }
    else if (b1c==2 && b5c==2 && b9c==2){
        disp.setText("I Win...Human.");win=true;
        int i=(int)(Math.random()*256);
        int j=(int)(Math.random()*256);
        int k=(int)(Math.random()*256);
        b1.setBackground(new java.awt.Color(i, j, k));
        b5.setBackground(new java.awt.Color(i, j, k));
        b9.setBackground(new java.awt.Color(i, j, k));
        b1c=-3;b2c=-3;b3c=-3;b4c=-3;b5c=-3;b6c=-3;b7c=-3;b8c=-3;b9c=-3;
        t1.stop();
        updatedata();
    }
    else if (b3c==1 && b5c==1 && b7c==1){
        disp.setText("You win this time...");win=true;
        int i=(int)(Math.random()*256);
        int j=(int)(Math.random()*256);
        int k=(int)(Math.random()*256);
        b3.setBackground(new java.awt.Color(i, j, k));
        b5.setBackground(new java.awt.Color(i, j, k));
        b7.setBackground(new java.awt.Color(i, j, k));
        b1c=-3;b2c=-3;b3c=-3;b4c=-3;b5c=-3;b6c=-3;b7c=-3;b8c=-3;b9c=-3;
        t1.stop();
        updatedata();
    }
    else if (b3c==2 && b5c==2 && b7c==2){
        disp.setText("I Win...Human.");win=true;
        int i=(int)(Math.random()*256);
        int j=(int)(Math.random()*256);
        int k=(int)(Math.random()*256);
        b3.setBackground(new java.awt.Color(i, j, k));
        b5.setBackground(new java.awt.Color(i, j, k));
        b7.setBackground(new java.awt.Color(i, j, k));
        b1c=-3;b2c=-3;b3c=-3;b4c=-3;b5c=-3;b6c=-3;b7c=-3;b8c=-3;b9c=-3;
        t1.stop();
        updatedata();
    }
    else if (b1c==1 && b4c==1 && b7c==1){
        disp.setText("You win this time...");win=true;
        int i=(int)(Math.random()*256);
        int j=(int)(Math.random()*256);
        int k=(int)(Math.random()*256);
        b1.setBackground(new java.awt.Color(i, j, k));
        b4.setBackground(new java.awt.Color(i, j, k));
        b7.setBackground(new java.awt.Color(i, j, k));
        b1c=-3;b2c=-3;b3c=-3;b4c=-3;b5c=-3;b6c=-3;b7c=-3;b8c=-3;b9c=-3;
        t1.stop();
        updatedata();
    }
    else if (b1c==2 && b4c==2 && b7c==2){
        disp.setText("I Win...Human.");win=true;
        int i=(int)(Math.random()*256);
        int j=(int)(Math.random()*256);
        int k=(int)(Math.random()*256);
        b1.setBackground(new java.awt.Color(i, j, k));
        b4.setBackground(new java.awt.Color(i, j, k));
        b7.setBackground(new java.awt.Color(i, j, k));
        b1c=-3;b2c=-3;b3c=-3;b4c=-3;b5c=-3;b6c=-3;b7c=-3;b8c=-3;b9c=-3;
        t1.stop();
        updatedata();
    }
    else if (b2c==1 && b5c==1 && b8c==1){
        disp.setText("You win this time...");win=true;
        int i=(int)(Math.random()*256);
        int j=(int)(Math.random()*256);
        int k=(int)(Math.random()*256);
        b2.setBackground(new java.awt.Color(i, j, k));
        b5.setBackground(new java.awt.Color(i, j, k));
        b8.setBackground(new java.awt.Color(i, j, k));
        b1c=-3;b2c=-3;b3c=-3;b4c=-3;b5c=-3;b6c=-3;b7c=-3;b8c=-3;b9c=-3;
        t1.stop();
        updatedata();
    }
    else if (b2c==2 && b5c==2 && b8c==2){
        disp.setText("I Win...Human.");win=true;
        int i=(int)(Math.random()*256);
        int j=(int)(Math.random()*256);
        int k=(int)(Math.random()*256);
        b2.setBackground(new java.awt.Color(i, j, k));
        b5.setBackground(new java.awt.Color(i, j, k));
        b8.setBackground(new java.awt.Color(i, j, k));
        b1c=-3;b2c=-3;b3c=-3;b4c=-3;b5c=-3;b6c=-3;b7c=-3;b8c=-3;b9c=-3;
        t1.stop();
        updatedata();
    }
    else if (b3c==1 && b6c==1 && b9c==1){
        disp.setText("You win this time...");win=true;
        int i=(int)(Math.random()*256);
        int j=(int)(Math.random()*256);
        int k=(int)(Math.random()*256);
        b3.setBackground(new java.awt.Color(i, j, k));
        b6.setBackground(new java.awt.Color(i, j, k));
        b9.setBackground(new java.awt.Color(i, j, k));
        b2c=-3;b2c=-3;b3c=-3;b4c=-3;b5c=-3;b6c=-3;b7c=-3;b8c=-3;b9c=-3;
        t1.stop();
        updatedata();
    }
    else if (b3c==2 && b6c==2 && b9c==2){
        disp.setText("I Win...Human.");win=true;
        int i=(int)(Math.random()*256);
        int j=(int)(Math.random()*256);
        int k=(int)(Math.random()*256);
        b3.setBackground(new java.awt.Color(i, j, k));
        b6.setBackground(new java.awt.Color(i, j, k));
        b9.setBackground(new java.awt.Color(i, j, k));
       b1c=-3;b2c=-3;b3c=-3;b4c=-3;b5c=-3;b6c=-3;b7c=-3;b8c=-3;b9c=-3;
       t1.stop();
       updatedata();
    }
    
}
public void chkwin2p(){
    if (b1c==1 && b2c==1 && b3c==1){
        disp.setText(""+X+" Wins!");win=true;
        int i=(int)(Math.random()*256);
        int j=(int)(Math.random()*256);
        int k=(int)(Math.random()*256);
        b1.setBackground(new java.awt.Color(i, j, k));
        b2.setBackground(new java.awt.Color(i, j, k));
        b3.setBackground(new java.awt.Color(i, j, k));
        b1c=-3;b2c=-3;b3c=-3;b4c=-3;b5c=-3;b6c=-3;b7c=-3;b8c=-3;b9c=-3;
        t1.stop();
        updatedata();
    }
    else if (b1c==2 && b2c==2 && b3c==2){
        disp.setText(""+O+" Wins!");win=true;
        int i=(int)(Math.random()*256);
        int j=(int)(Math.random()*256);
        int k=(int)(Math.random()*256);
        b1.setBackground(new java.awt.Color(i, j, k));
        b2.setBackground(new java.awt.Color(i, j, k));
        b3.setBackground(new java.awt.Color(i, j, k));
        b1c=-3;b2c=-3;b3c=-3;b4c=-3;b5c=-3;b6c=-3;b7c=-3;b8c=-3;b9c=-3;
        t1.stop();
        updatedata();
    }
    else if (b4c==1 && b5c==1 && b6c==1){
        disp.setText(""+X+" Wins!");win=true;
        int i=(int)(Math.random()*256);
        int j=(int)(Math.random()*256);
        int k=(int)(Math.random()*256);
        b4.setBackground(new java.awt.Color(i, j, k));
        b5.setBackground(new java.awt.Color(i, j, k));
        b6.setBackground(new java.awt.Color(i, j, k));
        b1c=-3;b2c=-3;b3c=-3;b4c=-3;b5c=-3;b6c=-3;b7c=-3;b8c=-3;b9c=-3;
        t1.stop();
        updatedata();
    }
    else if (b4c==2 && b5c==2 && b6c==2){
        disp.setText(""+O+" Wins!");win=true;
        int i=(int)(Math.random()*256);
        int j=(int)(Math.random()*256);
        int k=(int)(Math.random()*256);
        b4.setBackground(new java.awt.Color(i, j, k));
        b5.setBackground(new java.awt.Color(i, j, k));
        b6.setBackground(new java.awt.Color(i, j, k));
        b1c=-3;b2c=-3;b3c=-3;b4c=-3;b5c=-3;b6c=-3;b7c=-3;b8c=-3;b9c=-3;
        t1.stop();
        updatedata();
    }
    else if (b7c==1 && b8c==1 && b9c==1){
        disp.setText(""+X+" Wins!");win=true;
        int i=(int)(Math.random()*256);
        int j=(int)(Math.random()*256);
        int k=(int)(Math.random()*256);
        b7.setBackground(new java.awt.Color(i, j, k));
        b8.setBackground(new java.awt.Color(i, j, k));
        b9.setBackground(new java.awt.Color(i, j, k));
        b1c=-3;b2c=-3;b3c=-3;b4c=-3;b5c=-3;b6c=-3;b7c=-3;b8c=-3;b9c=-3;
        t1.stop();
        updatedata();
    }
    else if (b7c==2 && b8c==2 && b9c==2){
        disp.setText(""+O+" Wins!");win=true;
        int i=(int)(Math.random()*256);
        int j=(int)(Math.random()*256);
        int k=(int)(Math.random()*256);
        b7.setBackground(new java.awt.Color(i, j, k));
        b8.setBackground(new java.awt.Color(i, j, k));
        b9.setBackground(new java.awt.Color(i, j, k));
       b1c=-3;b2c=-3;b3c=-3;b4c=-3;b5c=-3;b6c=-3;b7c=-3;b8c=-3;b9c=-3;
       t1.stop();
       updatedata();
    }
    else if (b1c==1 && b5c==1 && b9c==1){
        disp.setText(""+X+" Wins!");win=true;
        int i=(int)(Math.random()*256);
        int j=(int)(Math.random()*256);
        int k=(int)(Math.random()*256);
        b1.setBackground(new java.awt.Color(i, j, k));
        b5.setBackground(new java.awt.Color(i, j, k));
        b9.setBackground(new java.awt.Color(i, j, k));
        b1c=-3;b2c=-3;b3c=-3;b4c=-3;b5c=-3;b6c=-3;b7c=-3;b8c=-3;b9c=-3;
        t1.stop();
        updatedata();
    }
    else if (b1c==2 && b5c==2 && b9c==2){
        disp.setText(""+O+" Wins!");win=true;
        int i=(int)(Math.random()*256);
        int j=(int)(Math.random()*256);
        int k=(int)(Math.random()*256);
        b1.setBackground(new java.awt.Color(i, j, k));
        b5.setBackground(new java.awt.Color(i, j, k));
        b9.setBackground(new java.awt.Color(i, j, k));
        b1c=-3;b2c=-3;b3c=-3;b4c=-3;b5c=-3;b6c=-3;b7c=-3;b8c=-3;b9c=-3;
        t1.stop();
        updatedata();
    }
    else if (b3c==1 && b5c==1 && b7c==1){
        disp.setText(""+X+" Wins!");win=true;
        int i=(int)(Math.random()*256);
        int j=(int)(Math.random()*256);
        int k=(int)(Math.random()*256);
        b3.setBackground(new java.awt.Color(i, j, k));
        b5.setBackground(new java.awt.Color(i, j, k));
        b7.setBackground(new java.awt.Color(i, j, k));
        b1c=-3;b2c=-3;b3c=-3;b4c=-3;b5c=-3;b6c=-3;b7c=-3;b8c=-3;b9c=-3;
        t1.stop();
        updatedata();
    }
    else if (b3c==2 && b5c==2 && b7c==2){
        disp.setText(""+O+" Wins!");win=true;
        int i=(int)(Math.random()*256);
        int j=(int)(Math.random()*256);
        int k=(int)(Math.random()*256);
        b3.setBackground(new java.awt.Color(i, j, k));
        b5.setBackground(new java.awt.Color(i, j, k));
        b7.setBackground(new java.awt.Color(i, j, k));
        b1c=-3;b2c=-3;b3c=-3;b4c=-3;b5c=-3;b6c=-3;b7c=-3;b8c=-3;b9c=-3;
        t1.stop();
        updatedata();
    }
    else if (b1c==1 && b4c==1 && b7c==1){
        disp.setText(""+X+" Wins!");win=true;
        int i=(int)(Math.random()*256);
        int j=(int)(Math.random()*256);
        int k=(int)(Math.random()*256);
        b1.setBackground(new java.awt.Color(i, j, k));
        b4.setBackground(new java.awt.Color(i, j, k));
        b7.setBackground(new java.awt.Color(i, j, k));
        b1c=-3;b2c=-3;b3c=-3;b4c=-3;b5c=-3;b6c=-3;b7c=-3;b8c=-3;b9c=-3;
        t1.stop();
        updatedata();
    }
    else if (b1c==2 && b4c==2 && b7c==2){
        disp.setText(""+O+" Wins!");win=true;
        int i=(int)(Math.random()*256);
        int j=(int)(Math.random()*256);
        int k=(int)(Math.random()*256);
        b1.setBackground(new java.awt.Color(i, j, k));
        b4.setBackground(new java.awt.Color(i, j, k));
        b7.setBackground(new java.awt.Color(i, j, k));
        b1c=-3;b2c=-3;b3c=-3;b4c=-3;b5c=-3;b6c=-3;b7c=-3;b8c=-3;b9c=-3;
        t1.stop();
        updatedata();
    }
    else if (b2c==1 && b5c==1 && b8c==1){
        disp.setText(""+X+" Wins!");win=true;
        int i=(int)(Math.random()*256);
        int j=(int)(Math.random()*256);
        int k=(int)(Math.random()*256);
        b2.setBackground(new java.awt.Color(i, j, k));
        b5.setBackground(new java.awt.Color(i, j, k));
        b8.setBackground(new java.awt.Color(i, j, k));
        b1c=-3;b2c=-3;b3c=-3;b4c=-3;b5c=-3;b6c=-3;b7c=-3;b8c=-3;b9c=-3;
        t1.stop();
        updatedata();
    }
    else if (b2c==2 && b5c==2 && b8c==2){
        disp.setText(""+O+" Wins!");win=true;
        int i=(int)(Math.random()*256);
        int j=(int)(Math.random()*256);
        int k=(int)(Math.random()*256);
        b2.setBackground(new java.awt.Color(i, j, k));
        b5.setBackground(new java.awt.Color(i, j, k));
        b8.setBackground(new java.awt.Color(i, j, k));
        b1c=-3;b2c=-3;b3c=-3;b4c=-3;b5c=-3;b6c=-3;b7c=-3;b8c=-3;b9c=-3;
        t1.stop();
        updatedata();
    }
    else if (b3c==1 && b6c==1 && b9c==1){
        disp.setText(""+X+" Wins!");win=true;
        int i=(int)(Math.random()*256);
        int j=(int)(Math.random()*256);
        int k=(int)(Math.random()*256);
        b3.setBackground(new java.awt.Color(i, j, k));
        b6.setBackground(new java.awt.Color(i, j, k));
        b9.setBackground(new java.awt.Color(i, j, k));
        b2c=-3;b2c=-3;b3c=-3;b4c=-3;b5c=-3;b6c=-3;b7c=-3;b8c=-3;b9c=-3;
        t1.stop();
        updatedata();
    }
    else if (b3c==2 && b6c==2 && b9c==2){
        disp.setText(""+O+" Wins!");win=true;
        int i=(int)(Math.random()*256);
        int j=(int)(Math.random()*256);
        int k=(int)(Math.random()*256);
        b3.setBackground(new java.awt.Color(i, j, k));
        b6.setBackground(new java.awt.Color(i, j, k));
        b9.setBackground(new java.awt.Color(i, j, k));
       b1c=-3;b2c=-3;b3c=-3;b4c=-3;b5c=-3;b6c=-3;b7c=-3;b8c=-3;b9c=-3;
       t1.stop();
       updatedata();
    }
}
public void chkdrw(){
    if (b1c>0 && b2c>0 && b3c>0 && b4c>0 && b5c>0 && b6c>0 && b7c>0 && b8c>0 && b9c>0){
        disp.setText("Its a Draw.");win=true;t1.stop();
    }
}
public void cturn(){
    int k=0;
    do{
int n=(int)(Math.random()*9);
switch(n){
    case 0: if (b1c<1 && k!=1){
            b1c=2;k=1;
            b1.setText("X");
        }
       case 1:  if (b2c<1 && k!=1){
            b2c=2;k=1;
            b2.setText("X");
        }
       case 2:  if (b3c<1 && k!=1){
            b3c=2;k=1;
            b3.setText("X");
        }
        case 3:  if (b4c<1 && k!=1){
            b4c=2;k=1;
            b4.setText("X");
        }
        case 4: if (b5c<1 && k!=1){
            b5c=2;k=1;
            b5.setText("X");
        }
        case 5: if (b6c<1 && k!=1){
            b6c=2;k=1;
            b6.setText("X");
        }
        case 6: if (b7c<1 && k!=1){
            b7c=2;k=1;
            b7.setText("X");
        }
        case 7: if (b8c<1 && k!=1){
            b8c=2;k=1;
            b8.setText("X");
        }
        case 8: if (b9c<1 && k!=1){
            b9c=2;k=1;
            b9.setText("X");
        }
}
    }
    while(k!=1);
}
public void updatedata(){
try{
    //Step 2
    Class.forName("java.sql.Driver");
    //Step 3
    Connection con=DriverManager.getConnection("jdbc:mysql://localhost/Winners","root","qwerty");
    //Step 4
    Statement stmt =con.createStatement();
    String query="";
    
    if (disp.getText().equals(""+X+" Wins!")||disp.getText().equals("I Win...Human.")){
    query="INSERT INTO Winner VALUES('"+X+"','"+O+"','"+X+"');";
    }
    if (disp.getText().equals(""+O+" Wins!")||disp.getText().equals("You win this time...")){
    query="INSERT INTO Winner VALUES('"+X+"','"+O+"','"+O+"');";
    }
    stmt.executeUpdate(query);
    int a = Integer.parseInt(mm3);
    int b = Integer.parseInt(sec3);
    int c = Integer.parseInt(ms3);
    String query2="INSERT INTO times VALUES('"+X+"','"+O+"',"+a+","+b+","+c+");";
    Statement stmt2 =con.createStatement();
    stmt2.executeUpdate(query2);
    //Step 6
    stmt.close();
    stmt2.close();
    con.close();
}
catch(Exception e){
    JOptionPane.showMessageDialog(null,"Error in Connectivity");
}}
    private void startActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_startActionPerformed
int chance=(int)(Math.random()*2);
if(vscomp==true){
    if (chance==0){
    compt=1;
    cturn();
    compt=0;pturn=1;
    disp.setText("Your turn player..." );
    }
    else if(chance==1){
    pturn=1;
    disp.setText("Players turn.");
    }
}
else if (vscomp==false){
    if(chance==1){
        p1t=1;p2t=0;
        disp.setText(""+X+"'s turn");
    }
    else if(chance==0){
        p2t=1;p1t=0;
        disp.setText(""+O+"'s turn");
    }
}
start.setEnabled(false);
t1.start();
    }//GEN-LAST:event_startActionPerformed

    private void b1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b1ActionPerformed
if (vscomp==true){
        if (pturn==1 && b1c==0){
        b1.setForeground(new java.awt.Color(255, 255, 51));
        b1.setText("O");
        b1c=1;compt=1;pturn=0;
        chkwin();chkdrw();
        if (win==false){
        cturn();compt=0;pturn=1;
        chkwin();chkdrw();
        if (win==false){
        disp.setText("Your turn player..." );
        }
        }
    }
}
else if(vscomp==false){
    if(p1t==1 && b1c==0){
        b1.setText("X");
        disp.setText(""+O+"'s turn");
        p1t=0;p2t=1;b1c=1;
        chkwin2p();chkdrw();
    }
    else if(p2t==1 && b1c==0){
        b1.setForeground(new java.awt.Color(255, 255, 51));
        b1.setText("O");
        disp.setText(""+X+"'s turn");
        p1t=1;p2t=0;b1c=2;
        chkwin2p();chkdrw();
    }
}
    }//GEN-LAST:event_b1ActionPerformed

    private void b2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b2ActionPerformed
if(vscomp==true){
        if (pturn==1 && b2c==0){
    b2.setForeground(new java.awt.Color(255, 255, 51));
    b2.setText("O");
    b2c=1;compt=1;pturn=0;
    chkwin();chkdrw();
    if (win==false){
    cturn();compt=0;pturn=1;
    chkwin();chkdrw();
    if (win==false){
    disp.setText("Your turn player..." );
    }
    }
}
}
else if(vscomp==false){
    if(p1t==1 && b2c==0){
        b2.setText("X");
        disp.setText(""+O+"'s turn");
        p1t=0;p2t=1;b2c=1;
        chkwin2p();chkdrw();
    }
    else if(p2t==1 && b2c==0){
        b2.setForeground(new java.awt.Color(255, 255, 51));
        b2.setText("O");
        disp.setText(""+X+"'s turn");
        p1t=1;p2t=0;b2c=2;
        chkwin2p();chkdrw();
    }
}
    }//GEN-LAST:event_b2ActionPerformed

    private void b3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b3ActionPerformed
if (vscomp==true){
        if (pturn==1 && b3c==0){
    b3.setForeground(new java.awt.Color(255, 255, 51));
    b3.setText("O");
    b3c=1;compt=1;pturn=0;
    chkwin();chkdrw();
   if (win==false){
    cturn();compt=0;pturn=1;
    chkwin();chkdrw();
   if (win==false){
    disp.setText("Your turn player..." );
    }
    }
}jPanel4.setVisible(true);
}
else if (vscomp==false){
    if(p1t==1 && b3c==0){
        b3.setText("X");
        disp.setText(""+O+"'s turn");
        p1t=0;p2t=1;b3c=1;
        chkwin2p();chkdrw();
    }
    else if(p2t==1 && b3c==0){
        b3.setForeground(new java.awt.Color(255, 255, 51));
        b3.setText("O");
        disp.setText(""+X+"'s turn");
        p1t=1;p2t=0;b3c=2;
        chkwin2p();chkdrw();
    }
}
    }//GEN-LAST:event_b3ActionPerformed

    private void b4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b4ActionPerformed
if(vscomp==true){
        if (pturn==1 && b4c==0){
    b4.setForeground(new java.awt.Color(255, 255, 51));
    b4.setText("O");
    b4c=1;compt=1;pturn=0;
    chkwin();chkdrw();
   if (win==false){
    cturn();compt=0;pturn=1;
    chkwin();chkdrw();
    if (win==false){
    disp.setText("Your turn player..." );
    }
    }
}
}
else if (vscomp==false){
    if(p1t==1 && b4c==0){
        b4.setText("X");
        disp.setText(""+O+"'s turn");
        p1t=0;p2t=1;b4c=1;
        chkwin2p();chkdrw();
    }
    else if(p2t==1 && b4c==0){
        b4.setForeground(new java.awt.Color(255, 255, 51));
        b4.setText("O");
        disp.setText(""+X+"'s turn");
        p1t=1;p2t=0;b4c=2;
        chkwin2p();chkdrw();
    }
}
    }//GEN-LAST:event_b4ActionPerformed

    private void b5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b5ActionPerformed
if(vscomp==true){
        if (pturn==1 && b5c==0){
    b5.setForeground(new java.awt.Color(255, 255, 51));
    b5.setText("O");
    b5c=1;compt=1;pturn=0;
    chkwin();chkdrw();
    if (win==false){
    cturn();compt=0;pturn=1;
    chkwin();chkdrw();
    if (win==false){
    disp.setText("Your turn player..." );
    }
    }
}
}
else if (vscomp==false){
    if(p1t==1 && b5c==0){
        b5.setText("X");
        disp.setText(""+O+"'s turn");
        p1t=0;p2t=1;b5c=1;
        chkwin2p();chkdrw();
    }
    else if(p2t==1 && b5c==0){
        b5.setForeground(new java.awt.Color(255, 255, 51));
        b5.setText("O");
        disp.setText(""+X+"'s turn");
        p1t=1;p2t=0;b5c=2;
        chkwin2p();chkdrw();
    }
}
    }//GEN-LAST:event_b5ActionPerformed

    private void b6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b6ActionPerformed
if(vscomp==true){
        if (pturn==1 && b6c==0){
    b6.setForeground(new java.awt.Color(255, 255, 51));
    b6.setText("O");
    b6c=1;compt=1;pturn=0;
    chkwin();chkdrw();
   if (win==false){
    cturn();compt=0;pturn=1;
    chkwin();chkdrw();
    if (win==false){
    disp.setText("Your turn player..." );
    }
    }
}
}
else if (vscomp==false){
    if(p1t==1 && b6c==0){
        b6.setText("X");
        disp.setText(""+O+"'s turn");
        p1t=0;p2t=1;b6c=1;
        chkwin2p();chkdrw();
    }
    else if(p2t==1 && b6c==0){
        b6.setForeground(new java.awt.Color(255, 255, 51));
        b6.setText("O");
        disp.setText(""+X+"'s turn");
        p1t=1;p2t=0;b6c=2;
        chkwin2p();chkdrw();
    }
}
    }//GEN-LAST:event_b6ActionPerformed

    private void b7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b7ActionPerformed
if(vscomp==true){
        if (pturn==1 && b7c==0){
    b7.setForeground(new java.awt.Color(255, 255, 51));
    b7.setText("O");
    b7c=1;compt=1;pturn=0;
    chkwin();chkdrw();
   if (win==false){
    cturn();compt=0;pturn=1;
    chkwin();chkdrw();
    if (win==false){
    disp.setText("Your turn player..." );
    }
   }
}
}
else if (vscomp==false){
    if(p1t==1 && b7c==0){
        b7.setText("X");
        disp.setText(""+O+"'s turn");
        p1t=0;p2t=1;b7c=1;
        chkwin2p();chkdrw();
    }
    else if(p2t==1 && b7c==0){
        b7.setForeground(new java.awt.Color(255, 255, 51));
        b7.setText("O");
        disp.setText(""+X+"'s turn");
        p1t=1;p2t=0;b7c=2;
        chkwin2p();chkdrw();
    }
}
    }//GEN-LAST:event_b7ActionPerformed

    private void b8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b8ActionPerformed
if(vscomp==true){
        if (pturn==1 && b8c==0){
    b8.setForeground(new java.awt.Color(255, 255, 51));
    b8.setText("O");
    b8c=1;compt=1;pturn=0;
    chkwin();chkdrw();
   if (win==false){
    cturn();compt=0;pturn=1;
    chkwin();chkdrw();
    if (win==false){
    disp.setText("Your turn player..." );
    }
    }
}
}
else if (vscomp==false){
    if(p1t==1 && b8c==0){
        b8.setText("X");
        disp.setText(""+O+"'s turn");
        p1t=0;p2t=1;b8c=1;
        chkwin2p();chkdrw();
    }
    else if(p2t==1 && b8c==0){
        b8.setForeground(new java.awt.Color(255, 255, 51));
        b8.setText("O");
        disp.setText(""+X+"'s turn");
        p1t=1;p2t=0;b8c=2;
        chkwin2p();chkdrw();
    }
}
    }//GEN-LAST:event_b8ActionPerformed

    private void b9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b9ActionPerformed
if (vscomp==true){
        if (pturn==1 && b9c==0){
    b9.setForeground(new java.awt.Color(255, 255, 51));
    b9.setText("O");
    b9c=1;compt=1;pturn=0;
    chkwin();chkdrw();
   if (win==false){
    cturn();compt=0;pturn=1;
    chkwin();chkdrw();
    if (win==false){
    disp.setText("Your turn player..." );
    }
    }
}
}
else if (vscomp==false){
    if(p1t==1 && b9c==0){
        b9.setText("X");
        disp.setText(""+O+"'s turn");
        p1t=0;p2t=1;b9c=1;
        chkwin2p();chkdrw();
    }
    else if(p2t==1 && b9c==0){
        b9.setForeground(new java.awt.Color(255, 255, 51));
        b9.setText("O");
        disp.setText(""+X+"'s turn");
        p1t=1;p2t=0;b9c=2;
        chkwin2p();chkdrw();
    }
}
    }//GEN-LAST:event_b9ActionPerformed

    private void resetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resetActionPerformed
b1c=0;b2c=0;b3c=0;b4c=0;b5c=0;b6c=0;b7c=0;b8c=0;b9c=0;compt=0;pturn=0;win=false;
b1.setBackground(new java.awt.Color(0,0,0));
b2.setBackground(new java.awt.Color(0,0,0));
b3.setBackground(new java.awt.Color(0,0,0));
b4.setBackground(new java.awt.Color(0,0,0));
b5.setBackground(new java.awt.Color(0,0,0));
b6.setBackground(new java.awt.Color(0,0,0));
b7.setBackground(new java.awt.Color(0,0,0));
b8.setBackground(new java.awt.Color(0,0,0));
b9.setBackground(new java.awt.Color(0,0,0));
b1.setForeground(new java.awt.Color(255,255,255));
b2.setForeground(new java.awt.Color(255,255,255));
b3.setForeground(new java.awt.Color(255,255,255));
b4.setForeground(new java.awt.Color(255,255,255));
b5.setForeground(new java.awt.Color(255,255,255));
b6.setForeground(new java.awt.Color(255,255,255));
b7.setForeground(new java.awt.Color(255,255,255));
b8.setForeground(new java.awt.Color(255,255,255));
b9.setForeground(new java.awt.Color(255,255,255));
b1.setText("");
b2.setText("");
b3.setText("");
b4.setText("");
b5.setText("");
b6.setText("");
b7.setText("");
b8.setText("");
b9.setText("");
disp.setText("Click on Start to begin...");
TimerBox.setText("00:00:00");
t1.restart();
t1.stop();
start.setEnabled(true);
    }//GEN-LAST:event_resetActionPerformed

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
reset.doClick();
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
reset.doClick();
disp.setText("Enter Your Names");
jPanel4.setVisible(true);
    }//GEN-LAST:event_jMenuItem2ActionPerformed

    private void LeadBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LeadBtnActionPerformed
Leaderboard.setVisible(true);
DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
try{
    //Step 2
    Class.forName("java.sql.Driver");
    //Step 3
    Connection con=DriverManager.getConnection("jdbc:mysql://localhost/Winners","root","qwerty");
    //Step 4
    Statement stmt =con.createStatement();
    String query="SELECT * from Winner;";
    ResultSet rs = stmt.executeQuery(query);
    //Step 5
    if(model.getRowCount()!=0){
    do{
        model.removeRow(0);
    }
    while(model.getRowCount()!=0);
    }
    
    while(rs.next()){
        String P1=rs.getString(1);
        String P2=rs.getString(2);
        String WIN=rs.getString(3);
        model.addRow(new Object[] {P1,P2,WIN});
        
}
jTable1.setModel(model);
//Step 6
    rs.close();
    stmt.close();
    con.close();
}
catch(Exception e){
    JOptionPane.showMessageDialog(null,"Error in Connectivity");
}
    }//GEN-LAST:event_LeadBtnActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
Leaderboard.dispose();
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
if(jTable1.getRowCount()!=0){
int ans =JOptionPane.showConfirmDialog(Leaderboard, "Are you Sure?", "Confirm", 0);
if(ans==0){
            try {
                Class.forName("java.sql.Driver");
                Connection con=DriverManager.getConnection("jdbc:mysql://localhost/Winners","root","qwerty");
                String query= "DELETE FROM winner;";
                Statement stmt=con.createStatement();
                stmt.executeUpdate(query);
                DefaultTableModel model= (DefaultTableModel) jTable1.getModel();
                Statement stmt2=con.createStatement();
                String q2="SELECT * FROM winner;";
                ResultSet rs=stmt2.executeQuery(q2);
                //Step 6
                do{
                model.removeRow(0);
                    }
                while(model.getRowCount()!=0);
                while(rs.next()){
                    String P1=rs.getString("Player1");
                    String P2=rs.getString("Player2");
                    String WIN=rs.getString("Winner");
                model.addRow(new Object[] {P1,P2,WIN});
            }   stmt.close();
                con.close();
                jTable1.setModel(model);
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, "Error in Connectivity");
            }

}
}else{
    JOptionPane.showMessageDialog(null, "No Records!");
}
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jMenuItem3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem3ActionPerformed
LeadBtn.doClick();
    }//GEN-LAST:event_jMenuItem3ActionPerformed

    private void BestBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BestBtnActionPerformed
BestTimes.setVisible(true);
DefaultTableModel model = (DefaultTableModel) jTable2.getModel();
try{
    //Step 2
    Class.forName("java.sql.Driver");
    //Step 3
    Connection con=DriverManager.getConnection("jdbc:mysql://localhost/Winners","root","qwerty");
    //Step 4
    Statement stmt =con.createStatement();
    String query= "SELECT * from times;";
    ResultSet rs = stmt.executeQuery(query);
    //Step 5
    if(model.getRowCount()!=0){
    do{
        model.removeRow(0);
    }
    while(model.getRowCount()!=0);
    }
    
    while(rs.next()){
        String P1=rs.getString(1);
        String P2=rs.getString(2);
        Integer min=rs.getInt(3);
        Integer sec=rs.getInt(4);
        Integer msec=rs.getInt(5);
        model.addRow(new Object[] {P1,P2,min,sec,msec});
        
}
jTable2.setModel(model);
//Step 6
    rs.close();
    stmt.close();
    con.close();
}
catch(Exception e){
    JOptionPane.showMessageDialog(null,"Error in Connectivity");
}
    }//GEN-LAST:event_BestBtnActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
if(jTable2.getRowCount()!=0){
int ans =JOptionPane.showConfirmDialog(BestTimes, "Are you Sure?", "Confirm", 0);
if(ans==0){
            try {
                Class.forName("java.sql.Driver");
                Connection con=DriverManager.getConnection("jdbc:mysql://localhost/Winners","root","qwerty");
                String query= "DELETE FROM times;";
                Statement stmt=con.createStatement();
                stmt.executeUpdate(query);
                DefaultTableModel model= (DefaultTableModel) jTable2.getModel();
                Statement stmt2=con.createStatement();
                String q2="SELECT * FROM times;";
                ResultSet rs=stmt2.executeQuery(q2);
                //Step 6
                do{
                model.removeRow(0);
                    }
                while(model.getRowCount()!=0);
                while(rs.next()){
                    String P1=rs.getString(1);
                    String P2=rs.getString(2);
                    Integer min=rs.getInt(3);
                    Integer sec=rs.getInt(4);
                    Integer msec=rs.getInt(5);
                    model.addRow(new Object[] {P1,P2,min,sec,msec});
            }   stmt.close();
                con.close();
                jTable2.setModel(model);
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, "Error in Connectivity");
            }

}
}else{
    JOptionPane.showMessageDialog(null, "No Records!");
}
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
BestTimes.dispose();
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jMenuItem5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem5ActionPerformed
sqlLogin.setVisible(true);
    }//GEN-LAST:event_jMenuItem5ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
try{
    Class.forName("java.sql.Driver");
    Connection con=DriverManager.getConnection("jdbc:mysql://localhost/?user="+jTextField1.getText()+"&password="+jPasswordField1.getText());
    
    Statement stmt =con.createStatement();
    String query="CREATE DATABASE Winners ;";
    stmt.executeUpdate(query);
    String query2="USE Winners ;";
    Statement stmt2=con.createStatement();
    stmt2.executeUpdate(query2);
    String query3="CREATE TABLE Winner(Player1 varchar(100) NOT NULL, Player2 varchar(100) NOT NULL, Winner varchar(100) NOT NULL);";
    Statement stmt3=con.createStatement();
    stmt3.executeUpdate(query3);
    String query4=" create table times(Player1 varchar(100),Player2 varchar(100),Minutes int(3),Seconds int(3),miliSeconds int(5));";
    Statement stmt4=con.createStatement();
    stmt3.executeUpdate(query4);
    JOptionPane.showMessageDialog(null, "Done!");
    
    stmt.close();
    con.close();
}
catch(Exception e){
    JOptionPane.showMessageDialog(null, "Error!");
}
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
try{
    Class.forName("java.sql.Driver");
    Connection con=DriverManager.getConnection("jdbc:mysql://localhost/?user="+jTextField1.getText()+"&password="+jPasswordField1.getText());
    
    Statement stmt =con.createStatement();
    String query="DROP DATABASE Winners ;";
    stmt.executeUpdate(query);
    JOptionPane.showMessageDialog(null, "Done!");
    
    stmt.close();
    con.close();
}
catch(Exception e){
    JOptionPane.showMessageDialog(null, "Error!");
}
    }//GEN-LAST:event_jButton7ActionPerformed

    private void rb2ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_rb2ItemStateChanged
        if (rb2.isSelected()==true){
            p1tf.setEnabled(true);
            p1tf.setText("");
            p1tf.grabFocus();
            vscomp=false;
        }
    }//GEN-LAST:event_rb2ItemStateChanged

    private void rb1ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_rb1ItemStateChanged
        if (rb1.isSelected()==true){
            p1tf.setEnabled(false);
            p1tf.setText("Computer");
            p2tf.grabFocus();
            vscomp=true;
        }
    }//GEN-LAST:event_rb1ItemStateChanged

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        X=p1tf.getText();
        O=p2tf.getText();
        if(X.equals("")||O.equals("")){
            JOptionPane.showMessageDialog(null, "Name Field(s) cannot be blank!");
        }
        else{
            b1.setVisible(true);
            b2.setVisible(true);
            b3.setVisible(true);
            b4.setVisible(true);
            b5.setVisible(true);
            b6.setVisible(true);
            b7.setVisible(true);
            b8.setVisible(true);
            b9.setVisible(true);
            reset.setVisible(true);
            start.setVisible(true);
            jPanel4.setVisible(false);
            pl1lbl.setText(X);
            pl2lbl.setText(O);
            pl1lbl.setVisible(true);
            vslbl.setVisible(true);
            pl2lbl.setVisible(true);
            disp.setText("Click on Start to begin...");
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void rb1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rb1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_rb1ActionPerformed
public Timer t1 = new Timer(1, new ActionListener(){
int ms=0, ss=0, mm=0;
String ms1,ss1,mm1="";
    public void actionPerformed(ActionEvent e){
        ms++;
        if(ms==1000){
           ms=0;
           ss++;
           if(ss==60){
              ss=0;
              mm++;
           }
        }
        if(ms<=9){ms1="0"+ms;
        }else ms1=""+ms;
        if(ss<=9){ss1="0"+ss;
        }else{ss1=""+ss;}
        if(mm<=9){mm1="0"+mm;
        }else{mm1=""+mm;}
    TimerBox.setText(mm1+":"+ss1+":"+ms1);
    mm3=mm1;ms3=ms1;sec3=ss1;
    }
});
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TTTvsPC.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TTTvsPC.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TTTvsPC.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TTTvsPC.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new TTTvsPC().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BestBtn;
    private javax.swing.JFrame BestTimes;
    private javax.swing.JButton LeadBtn;
    private javax.swing.JFrame Leaderboard;
    private javax.swing.JTextField TimerBox;
    private javax.swing.JButton b1;
    private javax.swing.JButton b2;
    private javax.swing.JButton b3;
    private javax.swing.JButton b4;
    private javax.swing.JButton b5;
    private javax.swing.JButton b6;
    private javax.swing.JButton b7;
    private javax.swing.JButton b8;
    private javax.swing.JButton b9;
    private javax.swing.ButtonGroup bg1;
    private javax.swing.JLabel disp;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JMenuItem jMenuItem4;
    private javax.swing.JMenuItem jMenuItem5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPasswordField jPasswordField1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField p1tf;
    private javax.swing.JTextField p2tf;
    private javax.swing.JLabel pl1lbl;
    private javax.swing.JLabel pl2lbl;
    private javax.swing.JRadioButton rb1;
    private javax.swing.JRadioButton rb2;
    private javax.swing.JButton reset;
    private javax.swing.JFrame sqlLogin;
    private javax.swing.JButton start;
    private javax.swing.JLabel vslbl;
    // End of variables declaration//GEN-END:variables
}
